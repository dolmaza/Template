@model PermissionsViewModel.PermissionsTreeViewModel
@Html.DevExpress().TreeList(settings =>
{
    settings = Model.GenerateTreeListDefaultSettings(settings);
    settings.Name = "PermissionTree";

    settings.KeyFieldName = "ID";
    settings.ParentFieldName = "ParentID";

    settings.CallbackRouteValues = Model.ListUrl;
    settings.SettingsEditing.AddNewNodeRouteValues = Model.AddNewUrl;
    settings.SettingsEditing.UpdateNodeRouteValues = Model.UpdateUrl;
    settings.SettingsEditing.DeleteNodeRouteValues = Model.DeleteUrl;

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.NewButton.Visible = true;
    settings.CommandColumn.DeleteButton.Visible = true;
    settings.CommandColumn.EditButton.Visible = true;
    settings.CommandColumn.VisibleIndex = 0;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;

    settings.Columns.Add(column =>
    {
        column.FieldName = "Caption";
        column.Caption = "Caption";
        column.ColumnType = MVCxTreeListColumnType.TextBox;
        column.Width = Unit.Pixel(300);

        column.EditorProperties().TextBox(c =>
        {
            c.ValidationSettings.RequiredField.IsRequired = true;

        });
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Url";
        column.Caption = "Url";
        column.ColumnType = MVCxTreeListColumnType.TextBox;
        column.Width = Unit.Pixel(260);
        
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Code";
        column.Caption = "Code";
        column.ColumnType = MVCxTreeListColumnType.TextBox;
        column.Width = Unit.Pixel(300);
        
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IconName";
        column.Caption = "Icon";
        column.ColumnType = MVCxTreeListColumnType.TextBox;
        column.Width = Unit.Pixel(170);
        
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "IsMenuItem"; column.Caption = "Is Menu Item"; column.Width = Unit.Pixel(150); column.ColumnType = MVCxTreeListColumnType.CheckBox;
        
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "SortIndex";
        column.Caption = "Sort Index";
        column.ColumnType = MVCxTreeListColumnType.SpinEdit;
        column.Width = Unit.Pixel(130);

        column.EditorProperties().SpinEdit(c =>
        {
            c.SpinButtons.ShowIncrementButtons = false;
        });
    });

    settings.Columns.Add(column => { column.SetEditCellTemplateContent(" "); });

    settings.CellEditorInitialize = (s, e) =>
    {
        var editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.Dynamic;
    };

}).Bind(Model.TreeItems).GetHtml()

