using Core.Entities;
using DevExpress.Web;
using DevExpress.Web.Mvc;
using Service.Properties;
using Service.Utilities;
using System;
using System.Web.Mvc;
using System.Web.UI.WebControls;
using Template.Admin.Models;
using Template.Admin.Reusable.FilterAttributes;

namespace Template.Admin.Reusable
{
    [BeforePageLoad]
    [RouteArea("Admin", AreaPrefix = "admin")]
    public class BaseController : Controller
    {
        public User UserItem { get; set; }

        public void GenerateSuccessErrorMessageContainer()
        {
            var model = ViewBag.LayoutViewModel as LayoutViewModel;
            if (model != null)
            {
                if (model.SuccessErrorMessageInfo == null)
                {
                    model.SuccessErrorMessageInfo = new SuccessErrorMessageInfo();
                }
                model.SuccessErrorMessageInfo.IsContainerAutoGenerated = true;

            }
            ViewBag.LayoutViewModel = model;
        }

        [Route("not-found", Name = "NotFound")]
        public ActionResult NotFound()
        {
            return View("NotFound");
        }

        public void InitErrorMessage(string message)
        {
            Session["ErrorMessage"] = message;
        }

        public void InitSuccessMessage(string message)
        {
            Session["SuccessMessage"] = message;

        }

    }

    public class BaseViewModel
    {
        public string Abort { get; set; } = Resources.Abort;

    }

    public class GridViewModelBase
    {
        #region Properties
        public string AddNewUrl { get; set; }
        public string UpdateUrl { get; set; }
        public string DeleteUrl { get; set; }
        public string ListUrl { get; set; }
        public string CustomActionUrl { get; set; }

        public GridViewSettings GenerateGridViewDefaultSettings(GridViewSettings settings)
        {
            settings.Width = Unit.Percentage(100);
            settings.Settings.ShowFilterRow = true;
            //Settings.settings.AutoFilterCondition = AutoFilterCondition.Contains;

            settings.Settings.ShowFilterRowMenu = true;
            settings.SettingsBehavior.AllowFocusedRow = true;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
            settings.CommandColumn.Width = Unit.Pixel(90);
            //Settings.SettingsCommandButton.RenderMode = GridCommandButtonRenderMode.Link;
            settings.SettingsCommandButton.DeleteButton.Text = "<i class=\"fa fa-trash-o\"></i> ";
            settings.SettingsCommandButton.EditButton.Text = "<i class=\"fa fa-pencil\"></i> ";
            settings.SettingsCommandButton.UpdateButton.Text = "<i class=\"fa fa-check\"></i> ";
            settings.SettingsCommandButton.CancelButton.Text = "<i class=\"fa fa-minus-circle\"></i> ";
            settings.Settings.ShowFooter = true;
            settings.SettingsPager.Visible = true;
            settings.SettingsPager.AlwaysShowPager = true;
            settings.SettingsPager.PageSize = 30;

            settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
            settings.Settings.GridLines = GridLines.Both;
            settings.SettingsText.ConfirmDelete = Resources.TextConfirmDelete;
            return settings;
        }
        #endregion Properties
    }

    public class TreeListVeiwModelBase
    {
        #region Properties
        public string AddNewUrl { get; set; }
        public string UpdateUrl { get; set; }
        public string DeleteUrl { get; set; }
        public string ListUrl { get; set; }

        public TreeListSettings GenerateTreeListDefaultSettings(TreeListSettings settings)
        {
            settings.Width = Unit.Percentage(100);
            settings.CommandColumn.NewButton.Text = "<i class=\"fa fa-plus\"></i> ";
            settings.CommandColumn.DeleteButton.Text = "<i class=\"fa fa-trash-o\"></i> ";
            settings.CommandColumn.EditButton.Text = "<i class=\"fa fa-pencil\"></i> ";
            settings.CommandColumn.UpdateButton.Text = "<i class=\"fa fa-check\"></i> ";
            settings.CommandColumn.CancelButton.Text = "<i class=\"fa fa-minus-circle\"></i> ";
            settings.SettingsBehavior.AutoExpandAllNodes = false;
            settings.SettingsBehavior.AllowFocusedNode = true;
            settings.CommandColumn.Width = Unit.Pixel(90);

            settings.SettingsEditing.ConfirmDelete = true;
            settings.SettingsText.ConfirmDelete = Resources.TextConfirmDelete;
            settings.Settings.GridLines = GridLines.Both;

            return settings;
        }
        #endregion Properties
    }

    public class DevexpressFormViewModelBase
    {
        #region Methods
        public DateEditSettings GenerateDateEditDefaultSettings(DateEditSettings settings)
        {
            settings.Properties.UseMaskBehavior = true;
            settings.Properties.EditFormat = EditFormat.Custom;
            settings.Properties.EditFormatString = Resources.FormatDate;
            settings.Properties.TimeSectionProperties.Visible = true;
            settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = Resources.FormatTime;
            settings.Date = DateTime.Now;
            settings.Width = Unit.Percentage(100);

            return settings;
        }

        public ComboBoxSettings GenerateComboBoxDefaultSettings(ComboBoxSettings settings)
        {
            settings.Width = Unit.Percentage(100);
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.DropDownStyle = DropDownStyle.DropDown;

            return settings;
        }
        #endregion Methods
    }
}